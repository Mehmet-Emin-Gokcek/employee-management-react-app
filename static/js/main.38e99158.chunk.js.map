{"version":3,"sources":["components/Search.js","components/AppHeader.js","components/AppFooter.js","constants/index.js","components/form/RegistrationForm.js","components/form/RegistrationModal.js","components/DataTable.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","className","action","method","htmlFor","type","id","placeholder","name","Button","color","style","AppHeader","Navbar","dark","expand","Nav","NavItem","NavbarBrand","href","icon","faUsers","size","pull","NavLink","Search","Component","AppFooter","display","justifyContent","alignItems","width","marginTop","React","USERS_API_URL","RegistrationForm","state","email","dob","address","phone","onChange","e","setState","target","value","submitNew","preventDefault","console","log","JSON","stringify","fetch","headers","body","then","res","json","user","props","toggle","addUserToState","catch","err","submitEdit","updateUserIntoState","this","Form","onSubmit","FormGroup","Label","for","Input","RegistrationModal","modal","previous","title","button","isNew","onClick","minWidth","Modal","isOpen","ModalHeader","ModalBody","DataTable","deleteItem","window","confirm","deleteItemFromState","items","noUsers","colSpan","align","Table","striped","textAlign","length","map","item","scope","updateState","Home","getItems","updated","filter","Container","paddingTop","Row","Col","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.38e99158.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nconst SearchBar = () => (\r\n  <form className=\"middle\" action=\"/\" method=\"get\">\r\n    <label htmlFor=\"header-search\">\r\n      <span className=\"visually-hidden\">Search Employees</span>\r\n    </label>\r\n    <input\r\n      type=\"text\"\r\n      id=\"header-search\"\r\n      placeholder=\"Search customers\"\r\n      name=\"s\"\r\n    />\r\n    <Button type=\"submit\" color=\"info\">\r\n      {\" \"}\r\n      <a style={{ color: \"white\" }}> Search </a>\r\n    </Button>{\" \"}\r\n  </form>\r\n);\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Search from \"./Search\";\r\n\r\nclass AppHeader extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <Nav className=\"container-fluid\">\r\n          <NavItem>\r\n            <NavbarBrand href=\"/\">\r\n              <FontAwesomeIcon icon={faUsers} size=\"2x\" pull=\"right\" />\r\n            </NavbarBrand>\r\n          </NavItem>\r\n          <NavItem>\r\n            <h3 style={{ color: \"white\" }}> Employee Managament System</h3>{\" \"}\r\n          </NavItem>\r\n          <NavItem>\r\n            {\" \"}\r\n            <NavLink>\r\n              {\" \"}\r\n              <Search />{\" \"}\r\n            </NavLink>{\" \"}\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\nexport default AppHeader; // 8\r\n","import React, { Fragment } from \"react\";\r\nclass AppFooter extends React.Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <hr\r\n            className=\"featurette-divider\"\r\n            style={{ width: \"85%\", marginTop: \"2%\" }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <footer style={{ marginTop: \"2%\" }}>\r\n            <p>Copyright © Employee Management Systems 2021</p>\r\n          </footer>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default AppFooter;\r\n","//export const USERS_API_URL = \"https://customermanagementapi2.azurewebsites.net/api/customers\";\r\n\r\nexport const USERS_API_URL = \"http://localhost:8080/api/employees\";\r\n","import React from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { USERS_API_URL } from \"../../constants\";\r\nclass RegistrationForm extends React.Component {\r\n  state = {\r\n    id: 0,\r\n    name: \"\",\r\n    email: \"\",\r\n    dob: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      const { id, name, email, dob, address, phone } = this.props.user;\r\n      this.setState({ id, name, email, dob, address, phone });\r\n    }\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitNew = (e) => {\r\n    e.preventDefault();\r\n    console.log(\r\n      JSON.stringify({\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        dob: this.state.dob,\r\n        address: this.state.address,\r\n        phone: this.state.phone,\r\n      })\r\n    );\r\n    fetch(USERS_API_URL, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        dob: this.state.dob,\r\n        address: this.state.address,\r\n        phone: this.state.phone,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((user) => {\r\n        this.props.toggle();\r\n        this.props.addUserToState(user);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  submitEdit = (e) => {\r\n    e.preventDefault();\r\n    fetch(`${USERS_API_URL}/${this.state.id}`, {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: this.state.id,\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        dob: this.state.dob,\r\n        address: this.state.address,\r\n        phone: this.state.phone,\r\n      }),\r\n    })\r\n      .then(() => {\r\n        this.props.toggle();\r\n        this.props.updateUserIntoState(this.state.id);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.props.user ? this.submitEdit : this.submitNew}>\r\n        <FormGroup>\r\n          <Label for=\"name\">Name:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.onChange}\r\n            value={this.state.name === \"\" ? \"\" : this.state.name}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"email\">Email:</Label>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={this.onChange}\r\n            value={this.state.email === \"\" ? \"\" : this.state.email}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"dob\">Date of Birth:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"dob\"\r\n            onChange={this.onChange}\r\n            value={this.state.dob === \"\" ? \"\" : this.state.dob}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"address\">Address:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            onChange={this.onChange}\r\n            value={this.state.address === \"\" ? \"\" : this.state.address}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"phone\">Phone:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            onChange={this.onChange}\r\n            value={this.state.phone === \"\" ? \"\" : this.state.phone}\r\n            placeholder=\"(999) 999-9999\"\r\n          />\r\n        </FormGroup>\r\n        <Button>Send</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default RegistrationForm;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport RegistrationForm from './RegistrationForm';\r\nclass RegistrationModal extends Component {\r\n\t\r\n    state = { modal: false }\r\n\t\r\n    toggle = () => { this.setState(previous => ({ modal: !previous.modal })); }\r\n\t\r\n    render() {\r\n\t\t\r\n        const isNew = this.props.isNew;\r\n\t\t\r\n        let title = 'Edit User';\r\n\t\t\r\n        let button = '';\r\n\t\t\r\n        if (isNew) \r\n\t\t{ \r\n\t\t\ttitle = 'Add User'; \r\n\t\t\tbutton = <Button color = \"success\" onClick = {this.toggle} style = {{minWidth: \"200px\"}}> Add </Button>;\r\n        } \r\n\t\telse \r\n\t\t{\r\n            button = <Button color = \"warning\" onClick = {this.toggle} style={{minWidth: \"75px\"}}> <span style={{color: 'white'}}> Edit </span></Button>;\r\n        }\r\n        return <Fragment> {button} \r\n\t\t\t\t\t<Modal isOpen = {this.state.modal} toggle = {this.toggle} className = {this.props.className}>\r\n\t\t\t\t\t<ModalHeader toggle = {this.toggle}> {title} </ModalHeader>  \r\n\t\t\t\t\t<ModalBody >\r\n\t\t\t\t\t\t<RegistrationForm\r\n\t\t\t\t\t\t\t\taddUserToState = {this.props.addUserToState}\r\n\t\t\t\t\t\t\t\tupdateUserIntoState = {this.props.updateUserIntoState}\r\n\t\t\t\t\t\t\t\ttoggle = {this.toggle}\r\n\t\t\t\t\t\t\t\tuser = {this.props.user}/>  \r\n\t\t\t\t\t</ModalBody>  \r\n\t\t\t\t\t</Modal>  \r\n\t\t\t   </Fragment> ;\r\n    }\r\n}\r\nexport default RegistrationModal;","import React, { Component } from \"react\";\r\nimport { Table, Button } from \"reactstrap\";\r\nimport RegistrationModal from \"./form/RegistrationModal\";\r\nimport { USERS_API_URL } from \"../constants\";\r\nclass DataTable extends Component {\r\n  deleteItem = (id) => {\r\n    let confirmDeletion = window.confirm(\r\n      \"Do you really wish to delete this employee record?\"\r\n    );\r\n    if (confirmDeletion) {\r\n      fetch(`${USERS_API_URL}/${id}`, {\r\n        method: \"delete\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          this.props.deleteItemFromState(id);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  render() {\r\n    const items = this.props.items;\r\n    const noUsers = (\r\n      <tr>\r\n        {\" \"}\r\n        <td colSpan=\"8\" align=\"center\">\r\n          {\" \"}\r\n          <b> No employees yet </b>{\" \"}\r\n        </td>{\" \"}\r\n      </tr>\r\n    );\r\n    return (\r\n      <Table striped>\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th> Id </th>\r\n            <th> Name </th>\r\n            <th> Email </th>\r\n            <th> DOB</th>\r\n            <th> Address </th>\r\n            <th> Phone </th>\r\n            <th style={{ textAlign: \"center\" }}> Actions </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {(!items || items.length) <= 0\r\n            ? noUsers\r\n            : items.map((item) => (\r\n                <tr key={item.id}>\r\n                  <th scope=\"row\"> {item.id} </th>\r\n                  <td> {item.name} </td>\r\n                  <td> {item.email} </td>\r\n                  <td> {item.dob} </td>\r\n                  <td> {item.address} </td>\r\n                  <td> {item.phone} </td>\r\n                  <td align=\"center\">\r\n                    <div>\r\n                      <RegistrationModal\r\n                        isNew={false}\r\n                        user={item}\r\n                        updateUserIntoState={this.props.updateState}\r\n                      />\r\n                      &nbsp; &nbsp; &nbsp;\r\n                      <Button\r\n                        color=\"danger\"\r\n                        onClick={() => this.deleteItem(item.id)}\r\n                      >\r\n                        {\" \"}\r\n                        Delete{\" \"}\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\nexport default DataTable;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Container, Row, Button } from \"reactstrap\";\r\nimport DataTable from \"./DataTable\";\r\nimport RegistrationModal from \"./form/RegistrationModal\";\r\nimport { USERS_API_URL } from \"../constants\";\r\nclass Home extends Component {\r\n  state = {\r\n    items: [],\r\n  };\r\n  componentDidMount() {\r\n    this.getItems();\r\n  }\r\n\r\n  getItems = () => {\r\n    fetch(USERS_API_URL)\r\n      .then((res) => res.json())\r\n      .then((res) => this.setState({ items: res }))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  addUserToState = (user) => {\r\n    this.setState((previous) => ({\r\n      items: [...previous.items, user],\r\n    }));\r\n  };\r\n  updateState = (id) => {\r\n    this.getItems();\r\n  };\r\n  deleteItemFromState = (id) => {\r\n    const updated = this.state.items.filter((item) => item.id !== id);\r\n    this.setState({ items: updated });\r\n  };\r\n  render() {\r\n    let button = \"\";\r\n\r\n    button = (\r\n      <Button\r\n        color=\"success\"\r\n        onClick={this.getItems()}\r\n        style={{ minWidth: \"200px\" }}\r\n      >\r\n        {\" \"}\r\n        All Employees{\" \"}\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <Container style={{ paddingTop: \"20px\" }}>\r\n        {button}\r\n        <Row>\r\n          <Col>\r\n            <DataTable\r\n              items={this.state.items}\r\n              updateState={this.updateState}\r\n              deleteItemFromState={this.deleteItemFromState}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <RegistrationModal\r\n              isNew={true}\r\n              addUserToState={this.addUserToState}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport AppHeader from './components/AppHeader';\nimport AppFooter from './components/AppFooter';\nimport Home from './components/Home';\nimport Search from './components/Search';\n\n\nclass App extends Component {\n    render() {\n    return <Fragment>\n      <AppHeader />\n      <Home />\n      <AppFooter />\n    </Fragment>;\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service '\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all '\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n            headers: {\r\n                'Service-Worker': 'script'\r\n            },\r\n        })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}